When would you want to use a remote repository rather than keeping all your work local?

When you are collaborating on a project with other people or when you know that you will be working on the same project from mulitple machines.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because you might not be ready to make commited changes public on GitHub!

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork - clone on GitHub server; use to create a copy of someone else's work

Clone - copy of GitHub commits; use to copy from GitHub to local machine or to make copy on local machine

Branch - commits on a diffferent "reachability" path; use to experiment with changes

What is the benefit of having a copy of the last known state of the remote stored locally?

You can make fast forward merges!

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You could have common copies of files on file sharing services like Google Docs/Dropbox and then iteratively save new versions as new changes are made. It would be somewhat simpler to make a change, but much more difficult to synchronize changes betwen iterations.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

The two main times I think I would want to make a branch is if I was testing out a completely new feature/functionality or if I wanted to create a pull request and get specific feedback on something before incorporating it into the master. The advantage of a branch is that it allows you to compartamentalize your code and makes it easier to get specific feedback through pull requests.